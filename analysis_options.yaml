analyzer:
  strong-mode:
    implicit-dynamic: false
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # treat missing returns as a warning (not a hint)
    missing_return: warning
    # allow having TODOs in the code
    todo: ignore
  exclude:
    - '.idea/**'
    - 'android/**'
    - 'assets/**'
    - 'build/**'
    - 'ios/**'
    - 'res/**'

linter:
  rules:
    # --- STYLE
    # identifiers
    - camel_case_types
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    # ordering
    - directives_ordering
    # formatting
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures
    # --- DOCUMENTATION
    # comments
    # doc comments
    - slash_for_doc_comments
    - package_api_docs # prefer
    - comment_references
    # markdown
    # writing
    # --- USAGE
    # libraries
    - implementation_imports
    - avoid_relative_lib_imports
    # strings
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    # collections
    - prefer_collection_literals
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    # functions
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    # parameters
    - prefer_equal_for_default_values
    # variables
    - avoid_init_to_null
    # members
    - unnecessary_getters_setters
    - prefer_final_fields
    #- prefer_expression_function_bodies # consider
    - unnecessary_this
    - prefer_typing_uninitialized_variables
    # constructors
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    # error handling
    - avoid_catches_without_on_clauses # avoid
    - use_rethrow_when_possible
    # asynchrony
    # --- DESIGN
    # names
    - use_to_and_as_if_applicable
    # libraries
    # classes
    - one_member_abstracts # avoid
    - public_member_api_docs
    # constructors
    - prefer_constructors_over_static_methods
    # members
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    # types
    - type_annotate_public_apis # prefer
    - omit_local_variable_types # avoid
    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    # parameters
    - avoid_positional_boolean_parameters # avoid
    # equality
    - hash_and_equals
    - avoid_null_checks_in_equality_operators